{"version":3,"sources":["SessionDescriptions.js","App.js","serviceWorker.js","index.js"],"names":["SessionDescriptions","props","CharacterPortrait","key","name","className","sm","xs","href","onClick","src","img","alt","shuffleArray","array","array2","slice","i","length","j","Math","floor","random","temp","CharacterPortraitGrid","grid","characters","map","character","imgpixel","e","CharacterCard","Body","desc","rounded","icon","faTimes","size","Session","session","noGutters","number","SessionsList","sessions","SessionsPane","state","current","this","setState","title","handleClick","handleReturnClick","React","Component","Parchment","useEffect","handleResize","content","document","querySelector","container","style","height","offsetHeight","window","addEventListener","id","App","currentCharacter","data","coverImg","logoImg","subtitle","copy","characterListTitle","sessionsListTitle","shipTitle","graveyardTitle","graveyard","author","authorEmail","testVar","preventDefault","dangerouslySetInnerHTML","__html","handleCardCloseClick","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5f89628.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SessionDescriptions(props) {\n  return null;\n}\n\nexport default SessionDescriptions;","import React from 'react';\nimport SessionDescriptions from './SessionDescriptions.js';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Media from 'react-bootstrap/Media';\nimport Row from 'react-bootstrap/Row';\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport data from './data.json';\nimport './App.css';\n\nfunction CharacterPortrait(props) {\n  return (\n    <Col key={props.name} className=\"character-portrait-container\" sm={4} xs={6}>\n      <a href=\"#card\" onClick={props.onClick}>\n        <Image src={props.img} className=\"character-portrait img-shadow\" alt={props.name} />\n      </a>\n      <a href=\"#card\" onClick={props.onClick} className=\"character-portrait-name text-info\">{props.name}</a>\n    </Col>\n  );\n}\n\nfunction shuffleArray(array) {\n  const array2 = array.slice();\n  let i = array2.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array2[i];\n    array2[i] = array2[j];\n    array2[j] = temp;\n  }\n  return array2;\n}\n\nfunction CharacterPortraitGrid(props) {\n  let grid = props.characters.map((character, i) => {\n    return (\n      <CharacterPortrait key={character.name}\n        name={character.name}\n        img={character.imgpixel}\n        onClick={(e) => props.onClick(i, e)}\n      />\n    );\n  });\n\n  if (props.characters.length) {\n    return (\n      <Row className=\"justify-content-center character-portrait-grid\">\n        {grid}\n      </Row>\n    );\n  } else {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <p>The stage is empty, waiting to be filled.</p>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction CharacterCard(props) {\n  if (!props.character) {\n    return null;\n  }\n\n  return (\n    <Row className=\"justify-content-center media-container\">\n      <Col xs={11}>\n      <Media className=\"\">\n            <Media.Body className=\"align-self-center\">\n              <h5>{props.character.name}</h5>\n              <p>{props.character.desc}</p>\n            </Media.Body>\n            <Image\n              className=\"align-self-center media-image\"\n              src={props.character.img}\n              alt={props.character.name}\n              rounded\n            />\n      </Media>\n      </Col>\n      <Col xs={0.5} className=\"icon-container\">\n      <FontAwesomeIcon icon={faTimes} size=\"lg\" onClick={props.onClick} />\n      </Col>\n    </Row>\n  );\n}\n\nfunction Session(props) {\n  return (\n    <div className=\"session\">\n      <Row className=\"justify-content-center\">\n        <h4>\n          {props.session.name}\n        </h4>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <a className=\"return-link\" href=\"#session\" onClick={props.onClick}>Return To List of Sessions</a>\n      </Row>\n      <Row className=\"justify-content-center\" noGutters>\n        <SessionDescriptions session={props.session.number} />\n      </Row>\n    </div>\n  );\n}\n\nfunction SessionsList(props) {\n  let sessions = props.sessions.map((session, i) => {\n    return (\n      <Row key={i} className='justify-content-center'>\n        <a className=\"text-info\" href=\"#session\" onClick={(e) => props.onClick(i, e)}>{session.name}</a>\n      </Row>\n    );\n  });\n\n  if (props.sessions.length) {\n    return (\n      <div>\n        {sessions}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <p>The story has not yet begun.</p>\n        </Row>\n      </div>\n    );\n  }\n\n  \n}\n\nclass SessionsPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: null,\n    }\n  }\n\n  handleClick(i, e) {\n    // e.preventDefault();\n    this.setState({\n      current: i,\n    });\n  }\n\n  handleReturnClick(e) {\n    // e.preventDefault();\n    this.setState({\n      current: null,\n    });\n  }\n\n  render() {\n    if (this.state.current === null) {\n      return(\n        <div>\n          <Row className=\"justify-content-center\">\n            <h4>\n              {this.props.title}\n            </h4>\n          </Row>\n          <SessionsList \n            sessions={this.props.sessions}\n            onClick={(i, e) => this.handleClick(i, e)} \n          />\n        </div>\n      );  \n    } else {\n      return (\n        <div>\n          <Session session={this.props.sessions[this.state.current]} onClick={(e) => this.handleReturnClick(e)}  />\n        </div>\n      );\n    }\n  }\n}\n\nfunction Parchment() {\n  React.useEffect(() => {\n    function handleResize() {\n      var content = document.querySelector('#parchment');\n      var container = document.querySelector('#contain');\n\n      // SVG feTurbulence can modify all others elements, that's why \"parchment\" is in absolute position.\n      // so for a better effect, absolute height is defined by his content.\n      content.style.height = container.offsetHeight + 'px';    \n    }\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize)\n  })\n\n  return (\n    <div id=\"parchment-container\">\n      <div id=\"parchment\"></div>\n      <div id=\"contain\">\n        <p id=\"parchment-title\">Never-ending Night in the Icy North!</p>\n        <p id=\"parchment-subtitle\"><i>Esteemed society mage seeks members for mission of relief and discovery!</i></p>\n        <p>Every tavern up and down the Sword Coast is abuzz with the news out of the far north - the Ten Towns of Icewind Dale lie under a mysterious eternal night, the sun never brightening to more than a hazy twilight at mid-day. Is the wintry goddess Auril to blame? Dark rumors whisper that Ten Towners are going to desperate and gruesome lengths to appease the Frostmaiden!</p>\n        <p>Stout-hearted types are called to join an expedition to bring aid to the beleaguered folk of Icewind Dale, led by Vellynne Harpell. Both outsiders and Dale locals are welcome. Lady Vellynne, reknowned magus of the Arcane Brotherhood and scion of a wealthy and famous family, reportedly also seeks to uncover how the frozen curse might be lifted. But given the secretive nature of the Arcanes, who is to say what other motives might lurk beneath the ice? After all, Icewind Dale is the end of the world, a place of exiles and vagabonds, and a land of secrets and hidden pasts buried in the snow…</p>\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCharacter: null,\n      characters: shuffleArray(data.characters),\n      sessions: data.sessions,\n      coverImg: data.coverImg,\n      logoImg: data.logoImg,\n      title: data.title,\n      subtitle: data.subtitle,\n      copy: data.copy,\n      characterListTitle: data.characterListTitle,\n      sessionsListTitle: data.sessionsListTitle,\n      shipTitle: data.shipTitle,\n      graveyardTitle: data.graveyardTitle,\n      graveyard: data.graveyard,\n      author: data.author,\n      authorEmail: data.authorEmail,\n      testVar: \"\",\n    }\n  }\n\n  handleClick(i, e) {\n    this.setState({\n      currentCharacter: this.state.characters[i],\n    });\n  }\n\n  handleCardCloseClick(e) {\n    e.preventDefault();\n    this.setState({\n      currentCharacter: null,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <img src={this.state.coverImg} className=\"App-header\" alt=\"The Frostmaiden menaces a hapless traveler\" />\n        <Container className=\"App\">\n          <img src={this.state.logoImg} className=\"App-logo\" alt=\"D&D Icewind Dale: Rime of the Frostmaiden\" />\n          <Row className=\"justify-content-center top-spacing-4\" noGutters>\n            <p dangerouslySetInnerHTML={{__html: this.state.copy}} />\n          </Row>\n\n          <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n\n          <Row className=\"justify-content-center\">\n            <Parchment />\n          </Row>\n\n          <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n\n          <Row className=\"justify-content-center\">\n            <h4>\n              {this.state.characterListTitle}\n            </h4>\n          </Row>\n          <CharacterPortraitGrid \n            characters={this.state.characters} \n            onClick={(i, e) => this.handleClick(i, e)}\n          />\n          <ScrollableAnchor id={'card'}>\n            <Row className=\"justify-content-center top-spacing bottom-spacing\">\n              <CharacterCard \n                character={this.state.currentCharacter} \n                onClick={(e) => this.handleCardCloseClick(e)} \n              />\n            </Row>\n          </ScrollableAnchor>\n\n          <ScrollableAnchor id={'session'}>\n            <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n          </ScrollableAnchor>\n\n          <SessionsPane sessions={this.state.sessions} title={this.state.sessionsListTitle} />\n\n          <Row className=\"justify-content-center bottom-divider\" noGutters></Row>\n          <Row className=\"footer justify-content-center\">\n            <Col>\n              <span>\n                {this.state.author}\n              </span>\n            </Col>\n            <Col>\n              <span>\n                {this.state.authorEmail}\n              </span>\n            </Col>\n          </Row>  \n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}